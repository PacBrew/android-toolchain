cmake_minimum_required(VERSION 3.6.0)

if (NOT DEFINED ENV{ANDROID_NDK})
    set(ANDROID_NDK /opt/pacbrew/android/android-ndk)
    set(ENV{ANDROID_NDK} ${ANDROID_NDK})
else ()
    set(ANDROID_NDK $ENV{ANDROID_NDK})
endif ()

set(ANDROID_NDK_HOME $ENV{ANDROID_NDK})

if (NOT DEFINED ENV{ANDROID_PREFIX})
    set(ANDROID_PREFIX /opt/pacbrew/android/portlibs/@TRIPLE@)
    set(ENV{ANDROID_PREFIX} ${ANDROID_PREFIX})
else ()
    set(ANDROID_PREFIX $ENV{ANDROID_PREFIX})
endif ()

set(ANDROID_PLATFORM 24)
set(ANDROID_ABI "@ABI@")
set(CMAKE_ANDROID_ARCH_ABI "@ABI@")
if (ANDROID_ABI STREQUAL armeabi-v7a)
  #set(ANDROID_USE_LEGACY_TOOLCHAIN_FILE FALSE)
  # for new toolchain
  set(CMAKE_ANDROID_ARM_MODE TRUE)
  set(CMAKE_ANDROID_ARM_NEON TRUE)
  # for legacy toolchain
  set(ANDROID_ARM_MODE arm)
  set(ANDROID_ARM_NEON TRUE)
endif()
include(${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

if (ANDROID_ABI STREQUAL armeabi-v7a)
  set(ANDROID_CUSTOM_FLAGS "-mtune=cortex-a9 -march=armv7-a -mfpu=neon -mfloat-abi=softfp")
  set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} ${ANDROID_CUSTOM_FLAGS}")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${ANDROID_CUSTOM_FLAGS}")
endif()

set(CMAKE_ASM_FLAGS_INIT "${ANDROID_CUSTOM_FLAGS} ${CMAKE_ASM_FLAGS_INIT} -isysroot ${ANDROID_PREFIX} -isystem ${ANDROID_PREFIX}/include -I${ANDROID_PREFIX}/include")
set(CMAKE_C_FLAGS_INIT "${CMAKE_C_FLAGS_INIT} ${CMAKE_ASM_FLAGS_INIT}")
set(CMAKE_CXX_FLAGS_INIT "${CMAKE_CXX_FLAGS_INIT} ${CMAKE_C_FLAGS_INIT}")
set(CMAKE_C_STANDARD_LIBRARIES "-L${ANDROID_PREFIX}/lib ${CMAKE_C_STANDARD_LIBRARIES}")
set(CMAKE_CXX_STANDARD_LIBRARIES "-L${ANDROID_PREFIX}/lib ${CMAKE_CXX_STANDARD_LIBRARIES} ${CMAKE_C_STANDARD_LIBRARIES}")
set(CMAKE_EXE_LINKER_FLAGS_INIT "-L${ANDROID_PREFIX}/lib ${CMAKE_EXE_LINKER_FLAGS_INIT} -Wl,-O1,--sort-common,--as-needed")

set(CMAKE_FIND_ROOT_PATH ${ANDROID_PREFIX})
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_FIND_PACKAGE_PREFER_CONFIG TRUE)

find_program(PKG_CONFIG_EXECUTABLE NAMES @TRIPLE@-linux-android-pkg-config HINTS "${ANDROID_PREFIX}/bin")
if (NOT PKG_CONFIG_EXECUTABLE)
    message(WARNING "Could not find @TRIPLE@-linux-android-pkg-config: check your android pacbrew toolchain")
endif ()

